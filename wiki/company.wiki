== company公司 ==
* 安装中文字体： 直接copy windows/fonts下的字体文件到~/.fonts下即OK
=== gtk-sharp ===
* 安装gtk-sharp环境 mono libgtk2.0-dev gtk-sharp2
* 透明窗口需打开设置管理器中xfwm的use-compositing开关
* 转换字符串为i18n调用字符串: `s/"\(\<.\{-}\>\)"/Catalog.GetString("\1")/g`
* 从其他项目导入gtk# UI
  {{{ class="brush: python"
  复制有关的.cs文件, 包括gtk-gui文件夹下的
  复制gtk-gui/gui.stetic中使用到的widget段到新工程的此文件中
  对比gtk-gui/generated.cs, 如有缺则复制补充
  在新工程中add相关文件
  使用时引入原项目命名空间
  OK
  }}}
   
* gtk#中使用Mono.Unix `xgettext -a file.cs`
  {{{ class="brush: python"
先将gtk-gui/gui.stetic转换为gtk-gui/gui.stetic.h
xgettext -a -dcn --from-code=UTF-8 *.cs gtk-gui/gui.stetic.h gtk-gui/*.cs
将charset改为UTF-8
msgfmt cn.po -o locale/cn/LC_MESSAGES/i18n.mo
LANGUAGE=cn mono bin/Debug/helloworld.exe
  }}}
 
* gtk#中对stetic使用Mono.Unix(将gui.stetic转换为gui.stetic.h)
  {{{ class="brush: python"
#!/usr/bin/python3
#coding=utf8

import sys
import re

def parse2dict(id,s,d):

    pat=re.compile(r'<.*?="(.*?)".*?>(.*?)<')
    m=pat.search(s)
    if not m:
        print(s)
    else:
        #print(id+'-'+m.group(1),m.group(2))
        d[id+'-'+m.group(1)]=m.group(2)

def gen2h(k,v):

    k=k.replace('.','_')
    return r'const char * '+k+'="'+v+'";\n'

if __name__ == '__main__':

    path1 = sys.argv[1]

    d={}
    lines = open(path1,'r').readlines()
    pat = re.compile(r'translatable="yes"')
    wl=[]
    pre = re.compile(r'<widget .*?id="(.*?)"')
    end = re.compile(r'</widget>')
    for file_line in lines:
        m=pre.search(file_line)
        if m:
            wl.append(m.group(1))
        m=end.search(file_line)
        if m:
            wl.pop()
        if pat.search(file_line):
            parse2dict(wl[-1],file_line,d)

    print(len(d))
    path2 = path1 + '.h'
    f2 = open(path2,'w')
    for k,v in d.items():
        print(k,v)
        s=gen2h(k,v)
        f2.write(s)
    f2.close()
  }}}
